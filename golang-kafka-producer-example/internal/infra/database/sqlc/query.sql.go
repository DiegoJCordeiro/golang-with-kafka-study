// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package sqlc

import (
	"context"
)

const queryAllPosts = `-- name: QueryAllPosts :many
SELECT uuid, message, read_at, deleted_at FROM POSTS LIMIT ? OFFSET ?
`

type QueryAllPostsParams struct {
	Limit  int64
	Offset int64
}

func (q *Queries) QueryAllPosts(ctx context.Context, arg QueryAllPostsParams) ([]POST, error) {
	rows, err := q.db.QueryContext(ctx, queryAllPosts, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []POST
	for rows.Next() {
		var i POST
		if err := rows.Scan(
			&i.Uuid,
			&i.Message,
			&i.ReadAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
